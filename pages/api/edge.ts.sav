// import type { Prime1000Exports } from '../../wasm'
// @ts-ignore
// import addWasm from '../../add.wasm?module'
import Prime1000 from '../../release.wasm?module'

// const module$ = WebAssembly.instantiate(addWasm)
const module$ = WebAssembly.instantiate(Prime1000)

export default async function handler() {
  const instance = (await module$) as any
  // const exports = instance.exports as AddModuleExports
  const exports = instance.exports as Prime1000
  // const { add_one: addOne } = exports
  const { Get1000Primes: get1000Primes, memory: memory} = exports
  // const number = addOne(10)
  const wasmByteMemoryArray = new Uint32Array(memory.buffer);

  // Get 1st 1000
  const prime1000 = wasmByteMemoryArray.slice(0,1000);
  let primeOutput: string = '';
  for (let i=0;i<prime1000.length;i++){
    primeOutput += `<div>${i}:${prime1000[i]}</div>`;
  }

  // return new Response(`got: ${number}`)
  return new Response(`got: ${primeOutput}`)
}

export const config = { runtime: 'edge' }
